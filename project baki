local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Kinlei/MaterialLua/master/Module.lua"))()

local Config = Library.Load({
    Title = "flipz Hub",
    Style = 3,
    SizeX = 400,
    SizeY = 350,
    Theme = "Dark",
})

local Main = {
    ShadowFarm = {
        Enabled = false,
        AutoPunch = false,
        Distance = 12
    },
    PunchAura = {
        Enabled = false,
        WaitValue = 0.1
    }
}

local Players = game.Players
local VirtualInputManager = game:GetService("VirtualInputManager")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local Player = Players.LocalPlayer
local Character = Player.Character
local RootPart = Character.HumanoidRootPart
local Humanoid = Character.Humanoid

local GamePlayer = game:GetService("Workspace").Game.Players

local MainTab = Config.New({
    Title = "Main"
})

local MiscTab = Config.New({
    Title = "Misc"
})

local ShadowFarmToggle = MainTab.Toggle({
    Text = "Shadow Farm",
    Callback = function(Value)
        Main.ShadowFarm.Enabled = Value
        
        while Main.ShadowFarm.Enabled do
            if not GamePlayer:FindFirstChild(Player.Name.."'s Shadow") then
                game:GetService("Workspace").Game.Trainers.MeditationSpot.Part.CFrame = CFrame.new(-525, 441, -1293)
                RootPart.CFrame = CFrame.new(-525, 441, -1293)
                task.wait()
                fireclickdetector(game:GetService("Workspace").Game.Trainers.MeditationSpot.ClickDetector)
                task.wait(3.5)
                for _, v in pairs(getconnections(Player.PlayerGui.Dialogue.Path1.MouseButton1Click)) do
                    v:Fire()
                end
            else
                for _, v in pairs(GamePlayer:GetChildren()) do
                    if v.Name == (Player.Name.."'s Shadow") then
                        RootPart.CFrame = CFrame.new(v.HumanoidRootPart.Position + v.HumanoidRootPart.CFrame.lookVector * Main.ShadowFarm.Distance, v.HumanoidRootPart.Position)
                    end
                end
            end
            task.wait()
        end
    end
})

local AutoPunchToggle = MainTab.Toggle({
    Text = "Auto Punch",
    Callback = function(Value)
        Main.ShadowFarm.AutoPunch = Value
        
        while Main.ShadowFarm.AutoPunch do
            for _, v in pairs(GamePlayer:GetChildren()) do
                local Magnitude = (RootPart.Position - v.HumanoidRootPart.Position).magnitude
                    if Magnitude <= 15 then
                        --[[repeat
                            task.wait(_G.waitpunch)
                            local args = {
                                [1] = "LightPunch",
                                [2] = 1,
                                [3] = v.Humanoid
                            }
                            game:GetService("ReplicatedStorage").Remotes.ClientToServer.BasicCombat:FireServer(unpack(args))
                        until v.Humanoid.Health <= 0 or npcfarm == false or punch == false
                        --]]
                        for count = 1,5 do 
                            task.wait(0.15)
                            game:GetService("ReplicatedStorage").Remotes.ClientToServer.BasicCombat:FireServer("LightPunch", count, v.Humanoid)
                        end
                    end
                end
            task.wait()
        end
    end
})

local DistanceSlider = MainTab.Slider({
    Text = "Distance From Shadow",
    Callback = function(Value)
        Main.ShadowFarm.Distance = Value
    end,
    Min = -15,
    Max = 15,
    Def = 0
})
